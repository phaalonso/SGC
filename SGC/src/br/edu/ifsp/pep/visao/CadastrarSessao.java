/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.ifsp.pep.visao;

import br.edu.ifsp.pep.controle.ControleFilme;
import br.edu.ifsp.pep.controle.ControleSala;
import br.edu.ifsp.pep.controle.ControleSessao;
import br.edu.ifsp.pep.modelo.Filme;
import br.edu.ifsp.pep.modelo.Sala;
import br.edu.ifsp.pep.modelo.Sessao;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author pedro
 */
public class CadastrarSessao extends javax.swing.JDialog {

    private Sessao selecionado;
    private ControleSessao controleSessao;
    private ControleSala controleSala;
    private ControleFilme controleFilme;
    
    
    private List<Filme> listaFilmes;
    private List<Sala> listaSala;
    
    public CadastrarSessao(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.controleSessao = new ControleSessao();
        this.controleSala = new ControleSala();
        this.controleFilme = new ControleFilme();
        this.listaFilmes = controleFilme.findAll();
        this.listaSala = controleSala.findAll();
        atualizarFilme();
        atualizarSala();
    }
    
    public void setSelecionado(Sessao s){
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        SimpleDateFormat sdfT = new SimpleDateFormat("HH:mm");
        this.selecionado = s;
        tfData.setText(sdf.format(s.getDataInicio()));
        tfHorario.setText(sdfT.format(s.getDataInicio()));
        taDescricao.setText(s.getDescricao());
        mcFilme.setSelectedItem(s.getFilme());
        mcSala.setSelectedItem(s.getSala());
        mbCadastrar.setText("Editar");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpPrincipal = new javax.swing.JPanel();
        mbSair = new com.hq.swingmaterialdesign.materialdesign.MButton();
        mbCadastrar = new com.hq.swingmaterialdesign.materialdesign.MButton();
        tfData = new com.hq.swingmaterialdesign.materialdesign.MFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        taDescricao = new javax.swing.JTextArea();
        lbDescricao = new javax.swing.JLabel();
        mcSala = new com.hq.swingmaterialdesign.materialdesign.MComboBox();
        mcFilme = new com.hq.swingmaterialdesign.materialdesign.MComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfHorario = new com.hq.swingmaterialdesign.materialdesign.MFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jpPrincipal.setBackground(java.awt.Color.white);
        jpPrincipal.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jpPrincipal.setPreferredSize(new java.awt.Dimension(410, 360));

        mbSair.setBackground(new java.awt.Color(73, 136, 137));
        mbSair.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mbSair.setText("Sair");
        mbSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbSairActionPerformed(evt);
            }
        });

        mbCadastrar.setBackground(new java.awt.Color(73, 136, 137));
        mbCadastrar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mbCadastrar.setText("Cadastrar");
        mbCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbCadastrarActionPerformed(evt);
            }
        });

        tfData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        tfData.setLabel("Data");

        taDescricao.setColumns(20);
        taDescricao.setRows(5);
        taDescricao.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jScrollPane1.setViewportView(taDescricao);

        lbDescricao.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        lbDescricao.setText("Descrição");

        mcSala.setAccent(new java.awt.Color(73, 136, 137));

        mcFilme.setAccent(new java.awt.Color(73, 136, 137));

        jLabel1.setText("Filme");

        jLabel2.setText("Sala");

        tfHorario.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));
        tfHorario.setLabel("Horário");

        javax.swing.GroupLayout jpPrincipalLayout = new javax.swing.GroupLayout(jpPrincipal);
        jpPrincipal.setLayout(jpPrincipalLayout);
        jpPrincipalLayout.setHorizontalGroup(
            jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPrincipalLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jpPrincipalLayout.createSequentialGroup()
                        .addComponent(mbSair, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(mbCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPrincipalLayout.createSequentialGroup()
                        .addComponent(lbDescricao)
                        .addGap(321, 321, 321))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPrincipalLayout.createSequentialGroup()
                        .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jpPrincipalLayout.createSequentialGroup()
                                    .addComponent(mcFilme, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPrincipalLayout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(181, 181, 181)))
                            .addGroup(jpPrincipalLayout.createSequentialGroup()
                                .addComponent(tfData, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)))
                        .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addComponent(mcSala, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                            .addComponent(tfHorario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(0, 17, Short.MAX_VALUE))
        );
        jpPrincipalLayout.setVerticalGroup(
            jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPrincipalLayout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfData, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mcSala, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mcFilme, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lbDescricao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mbSair, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mbCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpPrincipal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void mbSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbSairActionPerformed
        dispose();
    }//GEN-LAST:event_mbSairActionPerformed

    private void atualizarFilme(){
        mcFilme.removeAllItems();
        for(Filme f: this.listaFilmes){
            mcFilme.addItem(f);
        }  
        mcFilme.setSelectedIndex(-1);
    }
    
    private void atualizarSala(){
        mcSala.removeAllItems();
        for(Sala s: this.listaSala){
            mcSala.addItem(s);
        }
        mcSala.setSelectedIndex(-1);
    }
    
    private void mbCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbCadastrarActionPerformed
        try{
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy hh:mm:ss");
            Date data = sdf.parse(tfData.getText() + " " + tfHorario.getText().trim() + ":00");
            String descricao = taDescricao.getText();
            
            Sala s = (Sala) mcSala.getSelectedItem();
            Filme f = (Filme) mcFilme.getSelectedItem();
                        
            if(s != null){
                if(f != null){
                    long milesegundos = f.getDuracao() * 60 * 1000;
                    List<Sessao> conflito = controleSessao.localizarConflito(s, data, new Date(data.getTime() + milesegundos));
                    
                    if(conflito.isEmpty()){
                        Sessao sessao = new Sessao();
                        sessao.setDataInicio(data);
                        sessao.setDescricao(descricao);
                        sessao.setFilme(f);
                        sessao.setSala(s);
                        sessao.setArquivada(false);
                        
                        controleSessao.persist(sessao);
                        JOptionPane.showMessageDialog(null, "Sessao cadastrada");
                        dispose();
                    }else{                        
                        JOptionPane.showMessageDialog(null, "A sala esta ocupada nesse horário!");
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "Por favor selecione um filme");
                }
            }else{
                JOptionPane.showMessageDialog(null, "Por favor selecione uma sala");
            }            
        } catch (ParseException ex) {
            Logger.getLogger(CadastrarSessao.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_mbCadastrarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jpPrincipal;
    private javax.swing.JLabel lbDescricao;
    private com.hq.swingmaterialdesign.materialdesign.MButton mbCadastrar;
    private com.hq.swingmaterialdesign.materialdesign.MButton mbSair;
    private com.hq.swingmaterialdesign.materialdesign.MComboBox mcFilme;
    private com.hq.swingmaterialdesign.materialdesign.MComboBox mcSala;
    private javax.swing.JTextArea taDescricao;
    private com.hq.swingmaterialdesign.materialdesign.MFormattedTextField tfData;
    private com.hq.swingmaterialdesign.materialdesign.MFormattedTextField tfHorario;
    // End of variables declaration//GEN-END:variables
}
