/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.ifsp.pep.visao;

import br.edu.ifsp.pep.controle.ControleFilme;
import br.edu.ifsp.pep.controle.ControleItem;
import br.edu.ifsp.pep.controle.ControleProduto;
import br.edu.ifsp.pep.controle.ControleSessao;
import br.edu.ifsp.pep.modelo.Combo;
import br.edu.ifsp.pep.modelo.Filme;
import br.edu.ifsp.pep.modelo.Item;
import br.edu.ifsp.pep.modelo.Produto;
import br.edu.ifsp.pep.modelo.Sessao;
import br.edu.ifsp.pep.modelo.TipoUsuario;
import br.edu.ifsp.pep.modelo.Usuario;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.SimpleTimeZone;
import javax.persistence.NoResultException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pedro
 */
public class Menu extends javax.swing.JFrame {
    
    private List<Item> listaItens;
    private List<Filme> listaFilmes;
    private List<Sessao> listaSessoes;
    
    private Usuario usuario;
    private ControleItem controleItem;
    private ControleProduto controleProduto;
    private ControleFilme controleFilme;
    private ControleSessao controleSessao;
    
    public Menu(Usuario usuario) {
        this.usuario = usuario;
        initComponents();
        this.setResizable(false);
        
        this.controleItem = new ControleItem();
        this.controleProduto = new ControleProduto();
        this.controleFilme = new ControleFilme();
        this.controleSessao = new ControleSessao();
        
        if(usuario.getTipo() == TipoUsuario.COMUM){
            mbSessoes.setVisible(false);
            mbSessoes.setEnabled(false);
            mbFilmes.setVisible(false);
            mbFilmes.setEnabled(false);
            mbCadastrarProduto.setVisible(false);
            mbCadastrarProduto.setEnabled(false);
            mbEditarProduto.setVisible(false);
            mbEditarProduto.setEnabled(false);
            mbRemoverProduto.setVisible(false);
            mbRemoverProduto.setEnabled(false);
        }
        
        this.atualizarCalendarioSessao();
        
        lbBoasVindas.setText("Bem-vindo, "+usuario.getNome()+"!");
        mbFilmes.setSelected(false);
        jpFilmes.setVisible(false);
        
        mbProdutos.setSelected(false);
        jpProdutos.setVisible(false);
        
        mbSessoes.setSelected(false);
        jpSessoes.setVisible(false);
        
        mbVendas.setSelected(false);
        jpVenda.setVisible(false);
        
        mBHome.setSelected(true);
        jpHome.setVisible(true);
    }
    
    private void atualizarCalendarioSessao(){
        DefaultTableModel modelo = (DefaultTableModel) tbCalendarioSessao.getModel();
        modelo.setNumRows(0);
        SimpleDateFormat dataFormat = new SimpleDateFormat("dd/MM/yyyy");
        SimpleDateFormat horarioFormat = new SimpleDateFormat("HH:mm:ss");
        for(Sessao s: controleSessao.findNotArquivada()){
            modelo.addRow(new Object[]{
                s.getFilme().getTitulo(),
                s.getSala().getCodigo(),
                dataFormat.format(s.getDataInicio()),
                horarioFormat.format(s.getDataInicio())
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */ 
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PMain = new javax.swing.JPanel();
        jpMenu = new javax.swing.JPanel();
        lbMenu = new javax.swing.JLabel();
        mBHome = new com.hq.swingmaterialdesign.materialdesign.MToggleButton();
        mbVendas = new com.hq.swingmaterialdesign.materialdesign.MToggleButton();
        mbProdutos = new com.hq.swingmaterialdesign.materialdesign.MToggleButton();
        mbFilmes = new com.hq.swingmaterialdesign.materialdesign.MToggleButton();
        mbSessoes = new com.hq.swingmaterialdesign.materialdesign.MToggleButton();
        mbSair = new com.hq.swingmaterialdesign.materialdesign.MToggleButton();
        jpPrincipal = new javax.swing.JPanel();
        jpVenda = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tbProdutosVenda = new javax.swing.JTable();
        lbBoasVindas1 = new javax.swing.JLabel();
        lbBoasVindas2 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tbIngressosVenda = new javax.swing.JTable();
        mbAdicionarIngressoVenda = new com.hq.swingmaterialdesign.materialdesign.MToggleButton();
        mbAdicionarProdutoVenda = new com.hq.swingmaterialdesign.materialdesign.MToggleButton();
        lbSessaoVenda = new javax.swing.JLabel();
        mbRemoverIngressoVenda = new com.hq.swingmaterialdesign.materialdesign.MToggleButton();
        mbRemoverProdutoVenda = new com.hq.swingmaterialdesign.materialdesign.MToggleButton();
        jpHome = new javax.swing.JPanel();
        lbBoasVindas = new javax.swing.JLabel();
        mbGerarRelatorio = new com.hq.swingmaterialdesign.materialdesign.MButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        tbCalendarioSessao = new javax.swing.JTable();
        lbCalendario = new javax.swing.JLabel();
        jpSessoes = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbSessoes = new javax.swing.JTable();
        mbCadastrarSessoes = new com.hq.swingmaterialdesign.materialdesign.MButton();
        mbEditarSessoes = new com.hq.swingmaterialdesign.materialdesign.MButton();
        mbRemoverSessoes = new com.hq.swingmaterialdesign.materialdesign.MButton();
        mCPesquisaSessoes = new com.hq.swingmaterialdesign.materialdesign.MComboBox();
        mbPesquisarSessoes = new com.hq.swingmaterialdesign.materialdesign.MButton();
        tfPesquisaSessoes = new com.hq.swingmaterialdesign.materialdesign.MTextField();
        mbMontarProgramacao = new com.hq.swingmaterialdesign.materialdesign.MButton();
        jpProdutos = new javax.swing.JPanel();
        mbCadastrarProduto = new com.hq.swingmaterialdesign.materialdesign.MButton();
        mbEditarProduto = new com.hq.swingmaterialdesign.materialdesign.MButton();
        mbRemoverProduto = new com.hq.swingmaterialdesign.materialdesign.MButton();
        mCPesquisaProduto = new com.hq.swingmaterialdesign.materialdesign.MComboBox();
        mbPesquisarProdutos = new com.hq.swingmaterialdesign.materialdesign.MButton();
        tfPesquisaProduto = new com.hq.swingmaterialdesign.materialdesign.MTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbItems = new javax.swing.JTable();
        jpFilmes = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbFilmes = new javax.swing.JTable();
        mbCadastrarFilmes = new com.hq.swingmaterialdesign.materialdesign.MButton();
        mbEditarFilmes = new com.hq.swingmaterialdesign.materialdesign.MButton();
        mbRemoverFilmes = new com.hq.swingmaterialdesign.materialdesign.MButton();
        mCPesquisaFilmes = new com.hq.swingmaterialdesign.materialdesign.MComboBox();
        mbPesquisarFilmes = new com.hq.swingmaterialdesign.materialdesign.MButton();
        tfPesquisaFilmes = new com.hq.swingmaterialdesign.materialdesign.MTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(960, 720));

        PMain.setBackground(java.awt.Color.white);
        PMain.setPreferredSize(new java.awt.Dimension(960, 720));

        jpMenu.setBackground(new java.awt.Color(73, 136, 137));
        jpMenu.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        lbMenu.setFont(new java.awt.Font("Roboto", 1, 24)); // NOI18N
        lbMenu.setText("SGC");

        mBHome.setBackground(new java.awt.Color(73, 136, 137));
        mBHome.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mBHome.setText("Home");
        mBHome.setEndColor(new java.awt.Color(73, 136, 137));
        mBHome.setFocusPainted(false);
        mBHome.setHoverEndColor(new java.awt.Color(37, 157, 218));
        mBHome.setHoverStartColor(new java.awt.Color(37, 157, 218));
        mBHome.setSelected(true);
        mBHome.setSelectedColor(new java.awt.Color(37, 157, 218));
        mBHome.setStartColor(new java.awt.Color(73, 136, 137));
        mBHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mBHomeActionPerformed(evt);
            }
        });

        mbVendas.setBackground(new java.awt.Color(73, 136, 137));
        mbVendas.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mbVendas.setText("Vendas");
        mbVendas.setEndColor(new java.awt.Color(73, 136, 137));
        mbVendas.setHoverEndColor(new java.awt.Color(37, 157, 218));
        mbVendas.setHoverStartColor(new java.awt.Color(37, 157, 218));
        mbVendas.setSelectedColor(new java.awt.Color(37, 157, 218));
        mbVendas.setStartColor(new java.awt.Color(73, 136, 137));
        mbVendas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbVendasActionPerformed(evt);
            }
        });

        mbProdutos.setBackground(new java.awt.Color(73, 136, 137));
        mbProdutos.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mbProdutos.setText("Produtos");
        mbProdutos.setEndColor(new java.awt.Color(73, 136, 137));
        mbProdutos.setHoverEndColor(new java.awt.Color(37, 157, 218));
        mbProdutos.setHoverStartColor(new java.awt.Color(37, 157, 218));
        mbProdutos.setSelectedColor(new java.awt.Color(37, 157, 218));
        mbProdutos.setStartColor(new java.awt.Color(73, 136, 137));
        mbProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbProdutosActionPerformed(evt);
            }
        });

        mbFilmes.setBackground(new java.awt.Color(73, 136, 137));
        mbFilmes.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mbFilmes.setText("Filmes");
        mbFilmes.setEndColor(new java.awt.Color(73, 136, 137));
        mbFilmes.setHoverEndColor(new java.awt.Color(37, 157, 218));
        mbFilmes.setHoverStartColor(new java.awt.Color(37, 157, 218));
        mbFilmes.setSelectedColor(new java.awt.Color(37, 157, 218));
        mbFilmes.setStartColor(new java.awt.Color(73, 136, 137));
        mbFilmes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbFilmesActionPerformed(evt);
            }
        });

        mbSessoes.setBackground(new java.awt.Color(73, 136, 137));
        mbSessoes.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mbSessoes.setText("SESSÕES");
        mbSessoes.setEndColor(new java.awt.Color(73, 136, 137));
        mbSessoes.setHoverEndColor(new java.awt.Color(37, 157, 218));
        mbSessoes.setHoverStartColor(new java.awt.Color(37, 157, 218));
        mbSessoes.setSelectedColor(new java.awt.Color(37, 157, 218));
        mbSessoes.setStartColor(new java.awt.Color(73, 136, 137));
        mbSessoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbSessoesActionPerformed(evt);
            }
        });

        mbSair.setBackground(new java.awt.Color(73, 136, 137));
        mbSair.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mbSair.setText("Sair");
        mbSair.setEndColor(new java.awt.Color(73, 136, 137));
        mbSair.setHoverEndColor(new java.awt.Color(37, 157, 218));
        mbSair.setHoverStartColor(new java.awt.Color(37, 157, 218));
        mbSair.setMaximumSize(new java.awt.Dimension(64, 19));
        mbSair.setMinimumSize(new java.awt.Dimension(64, 19));
        mbSair.setSelectedColor(new java.awt.Color(37, 157, 218));
        mbSair.setStartColor(new java.awt.Color(73, 136, 137));
        mbSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbSairActionPerformed(evt);
            }
        });
        mbSair.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mbSairKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jpMenuLayout = new javax.swing.GroupLayout(jpMenu);
        jpMenu.setLayout(jpMenuLayout);
        jpMenuLayout.setHorizontalGroup(
            jpMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpMenuLayout.createSequentialGroup()
                .addGroup(jpMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mBHome, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                    .addComponent(mbVendas, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                    .addComponent(mbProdutos, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                    .addComponent(mbFilmes, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                    .addComponent(mbSessoes, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jpMenuLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(lbMenu)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(mbSair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jpMenuLayout.setVerticalGroup(
            jpMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpMenuLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(lbMenu)
                .addGap(62, 62, 62)
                .addComponent(mBHome, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mbVendas, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mbProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mbFilmes, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mbSessoes, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mbSair, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(540, Short.MAX_VALUE))
        );

        jpPrincipal.setBackground(java.awt.Color.white);

        jpVenda.setBackground(java.awt.Color.white);

        tbProdutosVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Produto", "Valor", "Quantidade", "total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbProdutosVenda.getTableHeader().setReorderingAllowed(false);
        jScrollPane8.setViewportView(tbProdutosVenda);
        if (tbProdutosVenda.getColumnModel().getColumnCount() > 0) {
            tbProdutosVenda.getColumnModel().getColumn(0).setHeaderValue("Código");
            tbProdutosVenda.getColumnModel().getColumn(3).setHeaderValue("Quantidade");
            tbProdutosVenda.getColumnModel().getColumn(4).setHeaderValue("total");
        }

        lbBoasVindas1.setFont(new java.awt.Font("Noto Sans", 0, 18)); // NOI18N
        lbBoasVindas1.setText("Produtos");

        lbBoasVindas2.setFont(new java.awt.Font("Noto Sans", 0, 18)); // NOI18N
        lbBoasVindas2.setText("Ingressos");

        tbIngressosVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "tipo", "Valor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbIngressosVenda.getTableHeader().setReorderingAllowed(false);
        jScrollPane9.setViewportView(tbIngressosVenda);

        mbAdicionarIngressoVenda.setBackground(new java.awt.Color(73, 136, 137));
        mbAdicionarIngressoVenda.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mbAdicionarIngressoVenda.setText("Adicionar");
        mbAdicionarIngressoVenda.setEndColor(new java.awt.Color(73, 136, 137));
        mbAdicionarIngressoVenda.setHoverEndColor(new java.awt.Color(37, 157, 218));
        mbAdicionarIngressoVenda.setHoverStartColor(new java.awt.Color(37, 157, 218));
        mbAdicionarIngressoVenda.setMaximumSize(new java.awt.Dimension(64, 19));
        mbAdicionarIngressoVenda.setMinimumSize(new java.awt.Dimension(64, 19));
        mbAdicionarIngressoVenda.setSelectedColor(new java.awt.Color(37, 157, 218));
        mbAdicionarIngressoVenda.setStartColor(new java.awt.Color(73, 136, 137));
        mbAdicionarIngressoVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbAdicionarIngressoVendaActionPerformed(evt);
            }
        });
        mbAdicionarIngressoVenda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mbAdicionarIngressoVendaKeyPressed(evt);
            }
        });

        mbAdicionarProdutoVenda.setBackground(new java.awt.Color(73, 136, 137));
        mbAdicionarProdutoVenda.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mbAdicionarProdutoVenda.setText("Adicionar");
        mbAdicionarProdutoVenda.setEndColor(new java.awt.Color(73, 136, 137));
        mbAdicionarProdutoVenda.setHoverEndColor(new java.awt.Color(37, 157, 218));
        mbAdicionarProdutoVenda.setHoverStartColor(new java.awt.Color(37, 157, 218));
        mbAdicionarProdutoVenda.setMaximumSize(new java.awt.Dimension(64, 19));
        mbAdicionarProdutoVenda.setMinimumSize(new java.awt.Dimension(64, 19));
        mbAdicionarProdutoVenda.setSelectedColor(new java.awt.Color(37, 157, 218));
        mbAdicionarProdutoVenda.setStartColor(new java.awt.Color(73, 136, 137));
        mbAdicionarProdutoVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbAdicionarProdutoVendaActionPerformed(evt);
            }
        });
        mbAdicionarProdutoVenda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mbAdicionarProdutoVendaKeyPressed(evt);
            }
        });

        lbSessaoVenda.setFont(new java.awt.Font("Noto Sans", 0, 18)); // NOI18N
        lbSessaoVenda.setText("Sessao");

        mbRemoverIngressoVenda.setBackground(new java.awt.Color(73, 136, 137));
        mbRemoverIngressoVenda.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mbRemoverIngressoVenda.setText("REMOVER");
        mbRemoverIngressoVenda.setEndColor(new java.awt.Color(73, 136, 137));
        mbRemoverIngressoVenda.setHoverEndColor(new java.awt.Color(37, 157, 218));
        mbRemoverIngressoVenda.setHoverStartColor(new java.awt.Color(37, 157, 218));
        mbRemoverIngressoVenda.setMaximumSize(new java.awt.Dimension(64, 19));
        mbRemoverIngressoVenda.setMinimumSize(new java.awt.Dimension(64, 19));
        mbRemoverIngressoVenda.setSelectedColor(new java.awt.Color(37, 157, 218));
        mbRemoverIngressoVenda.setStartColor(new java.awt.Color(73, 136, 137));
        mbRemoverIngressoVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbRemoverIngressoVendaActionPerformed(evt);
            }
        });
        mbRemoverIngressoVenda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mbRemoverIngressoVendaKeyPressed(evt);
            }
        });

        mbRemoverProdutoVenda.setBackground(new java.awt.Color(73, 136, 137));
        mbRemoverProdutoVenda.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mbRemoverProdutoVenda.setText("REMOVER");
        mbRemoverProdutoVenda.setEndColor(new java.awt.Color(73, 136, 137));
        mbRemoverProdutoVenda.setHoverEndColor(new java.awt.Color(37, 157, 218));
        mbRemoverProdutoVenda.setHoverStartColor(new java.awt.Color(37, 157, 218));
        mbRemoverProdutoVenda.setMaximumSize(new java.awt.Dimension(64, 19));
        mbRemoverProdutoVenda.setMinimumSize(new java.awt.Dimension(64, 19));
        mbRemoverProdutoVenda.setSelectedColor(new java.awt.Color(37, 157, 218));
        mbRemoverProdutoVenda.setStartColor(new java.awt.Color(73, 136, 137));
        mbRemoverProdutoVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbRemoverProdutoVendaActionPerformed(evt);
            }
        });
        mbRemoverProdutoVenda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mbRemoverProdutoVendaKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jpVendaLayout = new javax.swing.GroupLayout(jpVenda);
        jpVenda.setLayout(jpVendaLayout);
        jpVendaLayout.setHorizontalGroup(
            jpVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpVendaLayout.createSequentialGroup()
                .addComponent(lbSessaoVenda)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jpVendaLayout.createSequentialGroup()
                .addGroup(jpVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpVendaLayout.createSequentialGroup()
                        .addComponent(lbBoasVindas1)
                        .addGap(335, 335, 335)
                        .addComponent(mbRemoverProdutoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mbAdicionarProdutoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jpVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpVendaLayout.createSequentialGroup()
                                .addComponent(lbBoasVindas2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(mbRemoverIngressoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mbAdicionarIngressoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 745, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 745, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        jpVendaLayout.setVerticalGroup(
            jpVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpVendaLayout.createSequentialGroup()
                .addComponent(lbSessaoVenda, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                .addGap(25, 25, 25)
                .addGroup(jpVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mbAdicionarIngressoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mbRemoverIngressoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbBoasVindas2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpVendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mbRemoverProdutoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mbAdicionarProdutoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbBoasVindas1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(620, 620, 620))
        );

        jpHome.setBackground(java.awt.Color.white);

        lbBoasVindas.setFont(new java.awt.Font("Noto Sans", 0, 18)); // NOI18N
        lbBoasVindas.setText("Bem vindo, usuário !");

        mbGerarRelatorio.setBackground(new java.awt.Color(73, 136, 137));
        mbGerarRelatorio.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mbGerarRelatorio.setText("GERAR RELATÓRIOS");
        mbGerarRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbGerarRelatorioActionPerformed(evt);
            }
        });

        tbCalendarioSessao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Filme", "Sala", "Data", "Horario Inicio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbCalendarioSessao.getTableHeader().setReorderingAllowed(false);
        jScrollPane7.setViewportView(tbCalendarioSessao);
        if (tbCalendarioSessao.getColumnModel().getColumnCount() > 0) {
            tbCalendarioSessao.getColumnModel().getColumn(0).setResizable(false);
            tbCalendarioSessao.getColumnModel().getColumn(1).setResizable(false);
            tbCalendarioSessao.getColumnModel().getColumn(2).setResizable(false);
            tbCalendarioSessao.getColumnModel().getColumn(3).setResizable(false);
        }

        lbCalendario.setFont(new java.awt.Font("Noto Sans", 0, 18)); // NOI18N
        lbCalendario.setText("Verifique o calendário de sessões");

        javax.swing.GroupLayout jpHomeLayout = new javax.swing.GroupLayout(jpHome);
        jpHome.setLayout(jpHomeLayout);
        jpHomeLayout.setHorizontalGroup(
            jpHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpHomeLayout.createSequentialGroup()
                .addGroup(jpHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jpHomeLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(mbGerarRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 745, Short.MAX_VALUE)
                    .addComponent(lbBoasVindas, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbCalendario, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 87, Short.MAX_VALUE))
        );
        jpHomeLayout.setVerticalGroup(
            jpHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpHomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbBoasVindas)
                .addGap(46, 46, 46)
                .addComponent(lbCalendario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(mbGerarRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(538, Short.MAX_VALUE))
        );

        jpSessoes.setBackground(java.awt.Color.white);
        jpSessoes.setPreferredSize(new java.awt.Dimension(799, 1057));

        tbSessoes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Filme", "Sala", "Data", "Horario Inicio", "Arquivada"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbSessoes.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(tbSessoes);
        if (tbSessoes.getColumnModel().getColumnCount() > 0) {
            tbSessoes.getColumnModel().getColumn(0).setHeaderValue("Código");
            tbSessoes.getColumnModel().getColumn(1).setResizable(false);
            tbSessoes.getColumnModel().getColumn(1).setHeaderValue("Filme");
            tbSessoes.getColumnModel().getColumn(2).setResizable(false);
            tbSessoes.getColumnModel().getColumn(2).setHeaderValue("Sala");
            tbSessoes.getColumnModel().getColumn(3).setResizable(false);
            tbSessoes.getColumnModel().getColumn(3).setHeaderValue("Data");
            tbSessoes.getColumnModel().getColumn(4).setResizable(false);
            tbSessoes.getColumnModel().getColumn(4).setHeaderValue("Horario Inicio");
            tbSessoes.getColumnModel().getColumn(5).setResizable(false);
            tbSessoes.getColumnModel().getColumn(5).setHeaderValue("Arquivada");
        }

        mbCadastrarSessoes.setBackground(new java.awt.Color(73, 136, 137));
        mbCadastrarSessoes.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mbCadastrarSessoes.setText("Cadastrar Sessão");
        mbCadastrarSessoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbCadastrarSessoesActionPerformed(evt);
            }
        });

        mbEditarSessoes.setBackground(new java.awt.Color(73, 136, 137));
        mbEditarSessoes.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mbEditarSessoes.setText("Editar sessão");
        mbEditarSessoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbEditarSessoesActionPerformed(evt);
            }
        });

        mbRemoverSessoes.setBackground(new java.awt.Color(73, 136, 137));
        mbRemoverSessoes.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mbRemoverSessoes.setText("Remover Sessão");
        mbRemoverSessoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbRemoverSessoesActionPerformed(evt);
            }
        });

        mCPesquisaSessoes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Código", "Filme" }));
        mCPesquisaSessoes.setAccent(new java.awt.Color(73, 136, 137));

        mbPesquisarSessoes.setBackground(new java.awt.Color(73, 136, 137));
        mbPesquisarSessoes.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mbPesquisarSessoes.setText("Pesquisar");
        mbPesquisarSessoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbPesquisarSessoesActionPerformed(evt);
            }
        });

        tfPesquisaSessoes.setLabel("Pesquisa");

        mbMontarProgramacao.setBackground(new java.awt.Color(73, 136, 137));
        mbMontarProgramacao.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mbMontarProgramacao.setText("Montar Programação");
        mbMontarProgramacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbMontarProgramacaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpSessoesLayout = new javax.swing.GroupLayout(jpSessoes);
        jpSessoes.setLayout(jpSessoesLayout);
        jpSessoesLayout.setHorizontalGroup(
            jpSessoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpSessoesLayout.createSequentialGroup()
                .addGroup(jpSessoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jpSessoesLayout.createSequentialGroup()
                        .addGroup(jpSessoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mbCadastrarSessoes, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfPesquisaSessoes, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jpSessoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpSessoesLayout.createSequentialGroup()
                                .addComponent(mbEditarSessoes, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(mbRemoverSessoes, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpSessoesLayout.createSequentialGroup()
                                .addComponent(mCPesquisaSessoes, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(mbPesquisarSessoes, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(mbMontarProgramacao, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 745, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(77, Short.MAX_VALUE))
        );
        jpSessoesLayout.setVerticalGroup(
            jpSessoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpSessoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpSessoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mCPesquisaSessoes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfPesquisaSessoes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(mbPesquisarSessoes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mbMontarProgramacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(122, 122, 122)
                .addGroup(jpSessoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mbCadastrarSessoes, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mbEditarSessoes, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mbRemoverSessoes, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(475, Short.MAX_VALUE))
        );

        jpProdutos.setBackground(java.awt.Color.white);
        jpProdutos.setPreferredSize(new java.awt.Dimension(799, 1057));

        mbCadastrarProduto.setBackground(new java.awt.Color(73, 136, 137));
        mbCadastrarProduto.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mbCadastrarProduto.setText("Cadastrar produto");
        mbCadastrarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbCadastrarProdutoActionPerformed(evt);
            }
        });

        mbEditarProduto.setBackground(new java.awt.Color(73, 136, 137));
        mbEditarProduto.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mbEditarProduto.setText("Editar produto");
        mbEditarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbEditarProdutoActionPerformed(evt);
            }
        });

        mbRemoverProduto.setBackground(new java.awt.Color(73, 136, 137));
        mbRemoverProduto.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mbRemoverProduto.setText("Remover produto");
        mbRemoverProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbRemoverProdutoActionPerformed(evt);
            }
        });

        mCPesquisaProduto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Codigo", "Nome" }));
        mCPesquisaProduto.setAccent(new java.awt.Color(73, 136, 137));
        mCPesquisaProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mCPesquisaProdutoActionPerformed(evt);
            }
        });

        mbPesquisarProdutos.setBackground(new java.awt.Color(73, 136, 137));
        mbPesquisarProdutos.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mbPesquisarProdutos.setText("Pesquisar");
        mbPesquisarProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbPesquisarProdutosActionPerformed(evt);
            }
        });

        tfPesquisaProduto.setLabel("Pesquisa");

        tbItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descrição", "Valor", "Estoque"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbItems.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tbItems);
        if (tbItems.getColumnModel().getColumnCount() > 0) {
            tbItems.getColumnModel().getColumn(0).setResizable(false);
            tbItems.getColumnModel().getColumn(0).setHeaderValue("Código");
            tbItems.getColumnModel().getColumn(1).setResizable(false);
            tbItems.getColumnModel().getColumn(2).setResizable(false);
            tbItems.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout jpProdutosLayout = new javax.swing.GroupLayout(jpProdutos);
        jpProdutos.setLayout(jpProdutosLayout);
        jpProdutosLayout.setHorizontalGroup(
            jpProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpProdutosLayout.createSequentialGroup()
                .addGroup(jpProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpProdutosLayout.createSequentialGroup()
                        .addGroup(jpProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mbCadastrarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfPesquisaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jpProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpProdutosLayout.createSequentialGroup()
                                .addComponent(mbEditarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(mbRemoverProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpProdutosLayout.createSequentialGroup()
                                .addComponent(mCPesquisaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(mbPesquisarProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 745, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        jpProdutosLayout.setVerticalGroup(
            jpProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpProdutosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(mCPesquisaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfPesquisaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mbPesquisarProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(122, 122, 122)
                .addGroup(jpProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mbCadastrarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mbEditarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mbRemoverProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(399, Short.MAX_VALUE))
        );

        jpFilmes.setBackground(java.awt.Color.white);

        tbFilmes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Titulo", "Idade minima", "Data estreia", "Duração", "Direção"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbFilmes.getTableHeader().setReorderingAllowed(false);
        jScrollPane6.setViewportView(tbFilmes);
        if (tbFilmes.getColumnModel().getColumnCount() > 0) {
            tbFilmes.getColumnModel().getColumn(0).setResizable(false);
            tbFilmes.getColumnModel().getColumn(0).setHeaderValue("Código");
            tbFilmes.getColumnModel().getColumn(1).setResizable(false);
            tbFilmes.getColumnModel().getColumn(2).setResizable(false);
            tbFilmes.getColumnModel().getColumn(3).setResizable(false);
            tbFilmes.getColumnModel().getColumn(4).setResizable(false);
            tbFilmes.getColumnModel().getColumn(5).setResizable(false);
        }

        mbCadastrarFilmes.setBackground(new java.awt.Color(73, 136, 137));
        mbCadastrarFilmes.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mbCadastrarFilmes.setText("Cadastrar filme");
        mbCadastrarFilmes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbCadastrarFilmesActionPerformed(evt);
            }
        });

        mbEditarFilmes.setBackground(new java.awt.Color(73, 136, 137));
        mbEditarFilmes.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mbEditarFilmes.setText("Editar filme");
        mbEditarFilmes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbEditarFilmesActionPerformed(evt);
            }
        });

        mbRemoverFilmes.setBackground(new java.awt.Color(73, 136, 137));
        mbRemoverFilmes.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mbRemoverFilmes.setText("Remover filme");
        mbRemoverFilmes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbRemoverFilmesActionPerformed(evt);
            }
        });

        mCPesquisaFilmes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Código", "Título" }));
        mCPesquisaFilmes.setAccent(new java.awt.Color(73, 136, 137));

        mbPesquisarFilmes.setBackground(new java.awt.Color(73, 136, 137));
        mbPesquisarFilmes.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mbPesquisarFilmes.setText("Pesquisar");
        mbPesquisarFilmes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbPesquisarFilmesActionPerformed(evt);
            }
        });

        tfPesquisaFilmes.setLabel("Pesquisa");

        javax.swing.GroupLayout jpFilmesLayout = new javax.swing.GroupLayout(jpFilmes);
        jpFilmes.setLayout(jpFilmesLayout);
        jpFilmesLayout.setHorizontalGroup(
            jpFilmesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpFilmesLayout.createSequentialGroup()
                .addGroup(jpFilmesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpFilmesLayout.createSequentialGroup()
                        .addGroup(jpFilmesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfPesquisaFilmes, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mbCadastrarFilmes, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jpFilmesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpFilmesLayout.createSequentialGroup()
                                .addComponent(mCPesquisaFilmes, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(mbPesquisarFilmes, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpFilmesLayout.createSequentialGroup()
                                .addComponent(mbEditarFilmes, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(mbRemoverFilmes, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 745, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpFilmesLayout.setVerticalGroup(
            jpFilmesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpFilmesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpFilmesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(mCPesquisaFilmes, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfPesquisaFilmes, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mbPesquisarFilmes, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(122, 122, 122)
                .addGroup(jpFilmesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mbCadastrarFilmes, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mbEditarFilmes, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mbRemoverFilmes, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jpPrincipalLayout = new javax.swing.GroupLayout(jpPrincipal);
        jpPrincipal.setLayout(jpPrincipalLayout);
        jpPrincipalLayout.setHorizontalGroup(
            jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 834, Short.MAX_VALUE)
            .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jpHome, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jpVenda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jpPrincipalLayout.createSequentialGroup()
                    .addComponent(jpSessoes, javax.swing.GroupLayout.DEFAULT_SIZE, 822, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jpProdutos, javax.swing.GroupLayout.DEFAULT_SIZE, 834, Short.MAX_VALUE))
            .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jpPrincipalLayout.createSequentialGroup()
                    .addComponent(jpFilmes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 21, Short.MAX_VALUE)))
        );
        jpPrincipalLayout.setVerticalGroup(
            jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1128, Short.MAX_VALUE)
            .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jpHome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jpVenda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jpSessoes, javax.swing.GroupLayout.DEFAULT_SIZE, 1134, Short.MAX_VALUE))
            .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jpProdutos, javax.swing.GroupLayout.DEFAULT_SIZE, 1134, Short.MAX_VALUE))
            .addGroup(jpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPrincipalLayout.createSequentialGroup()
                    .addComponent(jpFilmes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout PMainLayout = new javax.swing.GroupLayout(PMain);
        PMain.setLayout(PMainLayout);
        PMainLayout.setHorizontalGroup(
            PMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PMainLayout.createSequentialGroup()
                .addComponent(jpMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jpPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        PMainLayout.setVerticalGroup(
            PMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PMainLayout.createSequentialGroup()
                .addGroup(PMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jpPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PMain, javax.swing.GroupLayout.DEFAULT_SIZE, 993, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PMain, javax.swing.GroupLayout.DEFAULT_SIZE, 1056, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void mbSairKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mbSairKeyPressed
    }//GEN-LAST:event_mbSairKeyPressed

    private void mbSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbSairActionPerformed
        dispose();
    }//GEN-LAST:event_mbSairActionPerformed

    private void mBHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mBHomeActionPerformed
        this.atualizarCalendarioSessao();

        mbFilmes.setSelected(false);
        jpFilmes.setVisible(false);
        
        mbProdutos.setSelected(false);
        jpProdutos.setVisible(false);
        
        mbSessoes.setSelected(false);
        jpSessoes.setVisible(false);
        
        mbVendas.setSelected(false);
        jpVenda.setVisible(false);
        
        mBHome.setSelected(true);
        jpHome.setVisible(true);
    }//GEN-LAST:event_mBHomeActionPerformed

    private void mbVendasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbVendasActionPerformed
        mbFilmes.setSelected(false);
        jpFilmes.setVisible(false);
        
        mbProdutos.setSelected(false);
        jpProdutos.setVisible(false);
        
        mbSessoes.setSelected(false);
        jpSessoes.setVisible(false);
        
        mbVendas.setSelected(true);
        jpVenda.setVisible(true);
        
        mBHome.setSelected(false);
        jpHome.setVisible(false); 
    }//GEN-LAST:event_mbVendasActionPerformed

    private void mbProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbProdutosActionPerformed
        mbFilmes.setSelected(false);
        jpFilmes.setVisible(false);
        
        mbProdutos.setSelected(true);
        jpProdutos.setVisible(true);
        
        mbSessoes.setSelected(false);
        jpSessoes.setVisible(false);
        
        mbVendas.setSelected(false);
        jpVenda.setVisible(false);
        
        mBHome.setSelected(false);
        jpHome.setVisible(false);     
                        
        this.listaItens = controleItem.findAll();
//        this.listaItens.forEach((i) -> {System.out.println(i);});
        atualizarProdutos();
    }//GEN-LAST:event_mbProdutosActionPerformed

    private void mbFilmesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbFilmesActionPerformed
        mbProdutos.setSelected(false);
        jpProdutos.setVisible(false);
        
        mbSessoes.setSelected(false);
        jpSessoes.setVisible(false);
        
        mbVendas.setSelected(false);
        jpVenda.setVisible(false);
        
        mBHome.setSelected(false);
        jpHome.setVisible(false);

        mbFilmes.setSelected(true);
        jpFilmes.setVisible(true);
        
        this.listaFilmes = controleFilme.findAll();
        atualizarFilmes();
    }//GEN-LAST:event_mbFilmesActionPerformed

    private void mbSessoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbSessoesActionPerformed
        mbFilmes.setSelected(false);
        jpFilmes.setVisible(false);
        
        mbProdutos.setSelected(false);
        jpProdutos.setVisible(false);
        
        mbSessoes.setSelected(true);
        jpSessoes.setVisible(true);
        
        mbVendas.setSelected(false);
        jpVenda.setVisible(false);
        
        mBHome.setSelected(false);
        jpHome.setVisible(false); 
        
        this.listaSessoes = controleSessao.findAll();
        atualizarSessoes();
    }//GEN-LAST:event_mbSessoesActionPerformed

    private void mbCadastrarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbCadastrarProdutoActionPerformed
        CadastroProduto cp = new CadastroProduto(this, true);
        cp.setModal(true);
        cp.setVisible(true);
        this.listaItens = controleItem.findAll();
        atualizarProdutos();
    }//GEN-LAST:event_mbCadastrarProdutoActionPerformed

    private void mbEditarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbEditarProdutoActionPerformed
        int row = tbItems.getSelectedRow();
        
        if(row > -1){
            Integer cod = null;
            cod = (Integer) tbItems.getValueAt(row, 0);
            //System.out.println(cod);
            if(cod != null){
                try{
                    Produto p = controleProduto.findByCodigo(cod);
                    CadastroProduto cp = new CadastroProduto(this, true);
                    cp.setSelecionado(p);
                    cp.setVisible(true);
                }catch(NoResultException ex){
                    JOptionPane.showMessageDialog(null, "Produto não encontrado");
                }
            }
        }else{
            JOptionPane.showMessageDialog(null, "Selecione um produto na tabela!");
        }
        
    }//GEN-LAST:event_mbEditarProdutoActionPerformed

    private void mbRemoverProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbRemoverProdutoActionPerformed
        int row = tbItems.getSelectedRow();
        
        if(row > -1){
            Integer cod = null;
            cod = (Integer) tbItems.getValueAt(row, 0);
            //System.out.println(cod);
            if(cod != null){
                try{
                    Produto p = controleProduto.findByCodigo(cod);
                    if(p.getEstoque() == 0){
                        controleProduto.remove(p);
                        JOptionPane.showMessageDialog(null, "Produto removido!");
                        this.listaItens = controleItem.findAll();
                        atualizarProdutos();
                    }else{
                        JOptionPane.showMessageDialog(null, "Para remover o produto ele não deve ter estoque!");
                    }
                }catch(NoResultException ex){
                    JOptionPane.showMessageDialog(null, "Produto não encontrado");
                }
            }
        }else{
            JOptionPane.showMessageDialog(null, "Selecione um produto na tabela!");
        }
    }//GEN-LAST:event_mbRemoverProdutoActionPerformed

    private void mbPesquisarProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbPesquisarProdutosActionPerformed
        //System.out.println(mCPesquisaProduto.getSelectedIndex());
        if(tfPesquisaProduto.getText().isEmpty()){
            this.listaItens = controleItem.findAll();
                atualizarProdutos();
        }else{
            switch(mCPesquisaProduto.getSelectedIndex()){
                case -1:
                    this.listaItens = controleItem.findAll();
                    atualizarProdutos();
                    break;
                case 0:
                    try{
                        Integer codigo = Integer.parseInt(tfPesquisaProduto.getText());
                        try{
                            Item i = controleItem.findByCodigo(codigo);
                            this.listaItens.clear();
                            this.listaItens.add(i);   
                            atualizarProdutos();
                        }catch(NoResultException ex){
                            JOptionPane.showMessageDialog(null, "Nenhum resultado com esse código!");
                        }
                    }catch(NumberFormatException ex){
                        JOptionPane.showMessageDialog(null, "Digite apenas número para pesquisar por código");
                    }
                    break;
                case 1:
                    try{
                        this.listaItens = controleItem.findByDesc(tfPesquisaProduto.getText().trim());
                        atualizarProdutos();
                    }catch(NoResultException ex){
                        JOptionPane.showMessageDialog(null, "Nenhum resultado com esse código!");
                    }
                    break;
            }
        }
    }//GEN-LAST:event_mbPesquisarProdutosActionPerformed

    private void mCPesquisaProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mCPesquisaProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mCPesquisaProdutoActionPerformed

    private void mbCadastrarSessoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbCadastrarSessoesActionPerformed
        CadastrarSessao cs = new CadastrarSessao(this, true);
        cs.setModal(true);
        cs.setVisible(true);
        this.listaSessoes = controleSessao.findAll();
        atualizarSessoes();
    }//GEN-LAST:event_mbCadastrarSessoesActionPerformed

    private void mbEditarSessoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbEditarSessoesActionPerformed
        int row = tbSessoes.getSelectedRow();
        if(row > -1){
            Integer cod = (Integer) tbSessoes.getValueAt(row, 0);
            Sessao s = controleSessao.findByCodigo(cod);
            if(!s.isArquivada()){
                //System.out.println("OI");
                CadastrarSessao cs = new CadastrarSessao(this, true);
                cs.setModal(true);
                cs.setSelecionado(s);
                cs.setVisible(true);
            }else{
                JOptionPane.showMessageDialog(null, "Não é possivel editar sessões arquivadas!");
            }
        }
        
    }//GEN-LAST:event_mbEditarSessoesActionPerformed

    private void mbRemoverSessoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbRemoverSessoesActionPerformed
        int row = tbSessoes.getSelectedRow();
        
        if(row > -1){
            Integer cod = null;
            cod = (Integer) tbSessoes.getValueAt(row, 0);
            try{
                Sessao s = controleSessao.findByCodigo(cod);
                if(!s.isArquivada()){
                    controleSessao.remove(s);
                    JOptionPane.showMessageDialog(null, "Sessão removida!");
                    this.listaSessoes = controleSessao.findAll();
                    atualizarSessoes();
                }else{
                    JOptionPane.showMessageDialog(null, "Não é possivel remover uma sesão arquivada");
                }
            }catch(NoResultException ex){
                JOptionPane.showMessageDialog(null, "Sessão não encontrada");
            }            
        }else{
            JOptionPane.showMessageDialog(null, "Selecione uma sessão a remover na tabela");
        }
    }//GEN-LAST:event_mbRemoverSessoesActionPerformed

    private void mbPesquisarSessoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbPesquisarSessoesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mbPesquisarSessoesActionPerformed

    private void mbCadastrarFilmesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbCadastrarFilmesActionPerformed
        CadastroFilme cadastroFilme = new CadastroFilme(this, true);
        cadastroFilme.setModal(true);
        cadastroFilme.setVisible(true);
        this.listaFilmes = controleFilme.findAll();
        atualizarFilmes();
    }//GEN-LAST:event_mbCadastrarFilmesActionPerformed

    private void mbEditarFilmesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbEditarFilmesActionPerformed
        int row = tbFilmes.getSelectedRow();
        if(row > -1){
            try{
                Integer codigo = (Integer) tbFilmes.getValueAt(row, 0);
                Filme f = controleFilme.findByCodigo(codigo);
                CadastroFilme cadastroFilme = new CadastroFilme(this, true);
                cadastroFilme.setModal(true);
                cadastroFilme.setSelecionado(f);
                cadastroFilme.setVisible(true);
                this.listaFilmes = controleFilme.findAll();
                atualizarFilmes();
            }catch(NoResultException ex){
                JOptionPane.showMessageDialog(null, "Filme não encontrado");
            }
        }else{
            JOptionPane.showMessageDialog(null, "Selecione um filme na tabela para editar");
        }   
    }//GEN-LAST:event_mbEditarFilmesActionPerformed

    private void mbRemoverFilmesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbRemoverFilmesActionPerformed
        int row = tbFilmes.getSelectedRow();
        if(row > -1){
            try{
                Integer codigo = (Integer) tbFilmes.getValueAt(row, 0);
                Filme f = controleFilme.findByCodigo(codigo);
                System.out.println(JOptionPane.showConfirmDialog(null, "Deseja remover esse filme?"));
                
                controleFilme.remove(f);
                
            }catch(Exception ex){
                System.out.println(ex);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Selelcione um filme para remover");
        }
    }//GEN-LAST:event_mbRemoverFilmesActionPerformed

    private void mbPesquisarFilmesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbPesquisarFilmesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mbPesquisarFilmesActionPerformed

    private void mbGerarRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbGerarRelatorioActionPerformed
        TelaRelatorio telaRelatorio = new TelaRelatorio(this, false);
        telaRelatorio.setVisible(true);
    }//GEN-LAST:event_mbGerarRelatorioActionPerformed

    private void mbMontarProgramacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbMontarProgramacaoActionPerformed
        MontarProgramacao mp = new MontarProgramacao(this, true);
        mp.setModal(true);
        mp.setVisible(true);
        this.listaSessoes = controleSessao.findAll();
        atualizarSessoes();
    }//GEN-LAST:event_mbMontarProgramacaoActionPerformed

    private void mbAdicionarIngressoVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbAdicionarIngressoVendaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mbAdicionarIngressoVendaActionPerformed

    private void mbAdicionarIngressoVendaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mbAdicionarIngressoVendaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_mbAdicionarIngressoVendaKeyPressed

    private void mbAdicionarProdutoVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbAdicionarProdutoVendaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mbAdicionarProdutoVendaActionPerformed

    private void mbAdicionarProdutoVendaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mbAdicionarProdutoVendaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_mbAdicionarProdutoVendaKeyPressed

    private void mbRemoverIngressoVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbRemoverIngressoVendaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mbRemoverIngressoVendaActionPerformed

    private void mbRemoverIngressoVendaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mbRemoverIngressoVendaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_mbRemoverIngressoVendaKeyPressed

    private void mbRemoverProdutoVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbRemoverProdutoVendaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mbRemoverProdutoVendaActionPerformed

    private void mbRemoverProdutoVendaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mbRemoverProdutoVendaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_mbRemoverProdutoVendaKeyPressed

    public void atualizarProdutos(){        
        DefaultTableModel modelo = (DefaultTableModel) tbItems.getModel();
        modelo.setNumRows(0);
        for(Item i: this.listaItens){
            if(i instanceof Produto){
                //System.out.println(i);
                modelo.addRow(new Object[] {i.getCodigo(), i.getDescricao(), i.getPreco(), ((Produto) i).getEstoque()});
            }else if(i instanceof Combo){
                modelo.addRow(new Object[] {i.getCodigo(), i.getDescricao(), i.getPreco(), null});
            }
        }
    }
    
    public void atualizarFilmes(){
        DefaultTableModel modelo = (DefaultTableModel) tbFilmes.getModel();
        modelo.setNumRows(0);
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        for(Filme f: this.listaFilmes){
            //System.out.println(f);
            modelo.addRow(new Object[] {f.getCodigo(), f.getTitulo(), f.getIdadeMinima(), sdf.format(f.getDataEstreia()), f.getDuracao(), f.getDirecao()});
        }
    }
    
    public void atualizarSessoes(){
        DefaultTableModel modelo = (DefaultTableModel) tbSessoes.getModel();
        modelo.setNumRows(0);
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        SimpleDateFormat sdf2 = new SimpleDateFormat("HH:mm:ss");
        String arquivada;
        for(Sessao s: this.listaSessoes){
            if(s.isArquivada())
                arquivada = "Sim";
            else
                arquivada = "Não";
            modelo.addRow(new Object[] {s.getCodigo(), s.getFilme().getTitulo(), s.getSala().getCodigo(), 
                sdf.format(s.getDataInicio()), sdf2.format(s.getDataInicio()), arquivada });
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PMain;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JPanel jpFilmes;
    private javax.swing.JPanel jpHome;
    private javax.swing.JPanel jpMenu;
    private javax.swing.JPanel jpPrincipal;
    private javax.swing.JPanel jpProdutos;
    private javax.swing.JPanel jpSessoes;
    private javax.swing.JPanel jpVenda;
    private javax.swing.JLabel lbBoasVindas;
    private javax.swing.JLabel lbBoasVindas1;
    private javax.swing.JLabel lbBoasVindas2;
    private javax.swing.JLabel lbCalendario;
    private javax.swing.JLabel lbMenu;
    private javax.swing.JLabel lbSessaoVenda;
    private com.hq.swingmaterialdesign.materialdesign.MToggleButton mBHome;
    private com.hq.swingmaterialdesign.materialdesign.MComboBox mCPesquisaFilmes;
    private com.hq.swingmaterialdesign.materialdesign.MComboBox mCPesquisaProduto;
    private com.hq.swingmaterialdesign.materialdesign.MComboBox mCPesquisaSessoes;
    private com.hq.swingmaterialdesign.materialdesign.MToggleButton mbAdicionarIngressoVenda;
    private com.hq.swingmaterialdesign.materialdesign.MToggleButton mbAdicionarProdutoVenda;
    private com.hq.swingmaterialdesign.materialdesign.MButton mbCadastrarFilmes;
    private com.hq.swingmaterialdesign.materialdesign.MButton mbCadastrarProduto;
    private com.hq.swingmaterialdesign.materialdesign.MButton mbCadastrarSessoes;
    private com.hq.swingmaterialdesign.materialdesign.MButton mbEditarFilmes;
    private com.hq.swingmaterialdesign.materialdesign.MButton mbEditarProduto;
    private com.hq.swingmaterialdesign.materialdesign.MButton mbEditarSessoes;
    private com.hq.swingmaterialdesign.materialdesign.MToggleButton mbFilmes;
    private com.hq.swingmaterialdesign.materialdesign.MButton mbGerarRelatorio;
    private com.hq.swingmaterialdesign.materialdesign.MButton mbMontarProgramacao;
    private com.hq.swingmaterialdesign.materialdesign.MButton mbPesquisarFilmes;
    private com.hq.swingmaterialdesign.materialdesign.MButton mbPesquisarProdutos;
    private com.hq.swingmaterialdesign.materialdesign.MButton mbPesquisarSessoes;
    private com.hq.swingmaterialdesign.materialdesign.MToggleButton mbProdutos;
    private com.hq.swingmaterialdesign.materialdesign.MButton mbRemoverFilmes;
    private com.hq.swingmaterialdesign.materialdesign.MToggleButton mbRemoverIngressoVenda;
    private com.hq.swingmaterialdesign.materialdesign.MButton mbRemoverProduto;
    private com.hq.swingmaterialdesign.materialdesign.MToggleButton mbRemoverProdutoVenda;
    private com.hq.swingmaterialdesign.materialdesign.MButton mbRemoverSessoes;
    private com.hq.swingmaterialdesign.materialdesign.MToggleButton mbSair;
    private com.hq.swingmaterialdesign.materialdesign.MToggleButton mbSessoes;
    private com.hq.swingmaterialdesign.materialdesign.MToggleButton mbVendas;
    private javax.swing.JTable tbCalendarioSessao;
    private javax.swing.JTable tbFilmes;
    private javax.swing.JTable tbIngressosVenda;
    private javax.swing.JTable tbItems;
    private javax.swing.JTable tbProdutosVenda;
    private javax.swing.JTable tbSessoes;
    private com.hq.swingmaterialdesign.materialdesign.MTextField tfPesquisaFilmes;
    private com.hq.swingmaterialdesign.materialdesign.MTextField tfPesquisaProduto;
    private com.hq.swingmaterialdesign.materialdesign.MTextField tfPesquisaSessoes;
    // End of variables declaration//GEN-END:variables
}
