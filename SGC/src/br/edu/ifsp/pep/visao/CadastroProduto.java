/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.ifsp.pep.visao;

import br.edu.ifsp.pep.controle.ControleProduto;
import br.edu.ifsp.pep.modelo.Produto;
import javax.persistence.EntityExistsException;
import javax.swing.JOptionPane;

/**
 *
 * @author pedro
 */
public class CadastroProduto extends javax.swing.JFrame {
    
    private ControleProduto controleP;
    private Produto selecionado;
    
    public CadastroProduto() {
        initComponents();
        this.controleP = new ControleProduto();
    }

    public void setSelecionado(Produto p){
        this.selecionado = p;
        tfCodigo.setText(String.valueOf(p.getCodigo()));
        tfDescricao.setText(p.getDescricao());
        tfEstoque.setText(String.valueOf(p.getEstoque()));
        tfValor.setText(String.valueOf(p.getPreco()));
        mbCadastrar.setText("Editar");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mpPrincipal = new com.hq.swingmaterialdesign.materialdesign.MPanel();
        tfCodigo = new com.hq.swingmaterialdesign.materialdesign.MTextField();
        tfDescricao = new com.hq.swingmaterialdesign.materialdesign.MTextField();
        tfEstoque = new com.hq.swingmaterialdesign.materialdesign.MTextField();
        mbSair = new com.hq.swingmaterialdesign.materialdesign.MButton();
        mbCadastrar = new com.hq.swingmaterialdesign.materialdesign.MButton();
        tfValor = new com.hq.swingmaterialdesign.materialdesign.MTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mpPrincipal.setBackground(java.awt.Color.white);

        tfCodigo.setLabel("Codigo");

        tfDescricao.setLabel("Descrição");

        tfEstoque.setLabel("Estoque");

        mbSair.setBackground(new java.awt.Color(73, 136, 137));
        mbSair.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mbSair.setText("Sair");
        mbSair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mbSairMouseClicked(evt);
            }
        });
        mbSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbSairActionPerformed(evt);
            }
        });

        mbCadastrar.setBackground(new java.awt.Color(73, 136, 137));
        mbCadastrar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mbCadastrar.setText("Cadastrar");
        mbCadastrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mbCadastrarMouseClicked(evt);
            }
        });
        mbCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbCadastrarActionPerformed(evt);
            }
        });

        tfValor.setLabel("Valor");

        javax.swing.GroupLayout mpPrincipalLayout = new javax.swing.GroupLayout(mpPrincipal);
        mpPrincipal.setLayout(mpPrincipalLayout);
        mpPrincipalLayout.setHorizontalGroup(
            mpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mpPrincipalLayout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addGroup(mpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mpPrincipalLayout.createSequentialGroup()
                        .addComponent(tfEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(129, Short.MAX_VALUE))
                    .addGroup(mpPrincipalLayout.createSequentialGroup()
                        .addGroup(mpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfValor, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(mpPrincipalLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(mbSair, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mbCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        mpPrincipalLayout.setVerticalGroup(
            mpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mpPrincipalLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(tfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tfDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tfValor, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tfEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(mpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mbSair, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mbCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mpPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mpPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void mbSairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mbSairMouseClicked

    }//GEN-LAST:event_mbSairMouseClicked

    private void mbSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbSairActionPerformed
        dispose();
    }//GEN-LAST:event_mbSairActionPerformed

    private void mbCadastrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mbCadastrarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_mbCadastrarMouseClicked

    private void mbCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbCadastrarActionPerformed
        try{ 
            Integer codigo = Integer.parseInt(tfCodigo.getText().trim());
            String nome = tfDescricao.getText().trim();
            Double valor = Double.parseDouble(tfValor.getText().trim());
            Integer estoque = Integer.parseInt(tfEstoque.getText().trim());

            if(codigo != null){
                if(valor >= 0){
                    if(codigo >= 0){
                        if(estoque > 0){
                            
                                Produto p = new Produto();
                                p.setCodigo(codigo);
                                p.setDescricao(nome);
                                p.setPreco(valor);
                                p.setEstoque(estoque);
                                
                                if(this.selecionado == null){
                                    try{
                                        controleP.persist(p);
                                        JOptionPane.showMessageDialog(null, "Produto cadastrado!");
                                        dispose();
                                    }catch(EntityExistsException ex){
                                        JOptionPane.showMessageDialog(null, "Não foi possivel cadastrar!");
                                    }
                                }else{
                                    controleP.merge(p);
                                    JOptionPane.showMessageDialog(null, "Produto atualizado!");
                                    dispose();
                                }
                                
                        }else{
                            JOptionPane.showMessageDialog(null, "Estoque deve ser maior que 0!");
                        }
                    }else{
                        JOptionPane.showMessageDialog(null, "O codigo deve ser maior que 0!");
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "O valor deve ser acima de 0!");
                }
            }else{
                JOptionPane.showMessageDialog(null, "Preencha o campo do código");
            }
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Por favor insira apenas numeros nos campos\nvalor e estoque");
        }
    }//GEN-LAST:event_mbCadastrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.hq.swingmaterialdesign.materialdesign.MButton mbCadastrar;
    private com.hq.swingmaterialdesign.materialdesign.MButton mbSair;
    private com.hq.swingmaterialdesign.materialdesign.MPanel mpPrincipal;
    private com.hq.swingmaterialdesign.materialdesign.MTextField tfCodigo;
    private com.hq.swingmaterialdesign.materialdesign.MTextField tfDescricao;
    private com.hq.swingmaterialdesign.materialdesign.MTextField tfEstoque;
    private com.hq.swingmaterialdesign.materialdesign.MTextField tfValor;
    // End of variables declaration//GEN-END:variables
}
