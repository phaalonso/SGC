/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.ifsp.pep.visao;

import br.edu.ifsp.pep.controle.ControleAssento;
import br.edu.ifsp.pep.modelo.Assento;
import br.edu.ifsp.pep.modelo.Sala;
import java.util.List;
import javax.persistence.RollbackException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pedro
 */
public class CadastrarAssento extends javax.swing.JDialog {

    private Sala sala;
    private List<Assento> listaAssento;
    private ControleAssento controleAssento;
    
    public CadastrarAssento(java.awt.Frame parent, boolean modal, Sala s) {
        super(parent, modal);
        initComponents();
        this.sala = s;
        listaAssento = s.getAssentos();
        controleAssento = new ControleAssento();
        atualizaTabelaAssento();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tfLetra = new com.hq.swingmaterialdesign.materialdesign.MTextField();
        tfCodigo = new com.hq.swingmaterialdesign.materialdesign.MTextField();
        mbAdicionar = new com.hq.swingmaterialdesign.materialdesign.MToggleButton();
        mbSair = new com.hq.swingmaterialdesign.materialdesign.MToggleButton();
        cbDisponivel = new javax.swing.JCheckBox();
        jScrollPane10 = new javax.swing.JScrollPane();
        tbAssento = new javax.swing.JTable();
        mbHabilitar = new com.hq.swingmaterialdesign.materialdesign.MToggleButton();
        mbRemover = new com.hq.swingmaterialdesign.materialdesign.MToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(java.awt.Color.white);
        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        tfLetra.setLabel("Letra do assento");

        tfCodigo.setLabel("Número do assento");

        mbAdicionar.setBackground(new java.awt.Color(73, 136, 137));
        mbAdicionar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mbAdicionar.setText("ADICIONAR");
        mbAdicionar.setEndColor(new java.awt.Color(73, 136, 137));
        mbAdicionar.setHoverEndColor(new java.awt.Color(37, 157, 218));
        mbAdicionar.setHoverStartColor(new java.awt.Color(37, 157, 218));
        mbAdicionar.setMaximumSize(new java.awt.Dimension(64, 19));
        mbAdicionar.setMinimumSize(new java.awt.Dimension(64, 19));
        mbAdicionar.setSelectedColor(new java.awt.Color(37, 157, 218));
        mbAdicionar.setStartColor(new java.awt.Color(73, 136, 137));
        mbAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbAdicionarActionPerformed(evt);
            }
        });
        mbAdicionar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mbAdicionarKeyPressed(evt);
            }
        });

        mbSair.setBackground(new java.awt.Color(73, 136, 137));
        mbSair.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mbSair.setText("SAIR");
        mbSair.setEndColor(new java.awt.Color(73, 136, 137));
        mbSair.setHoverEndColor(new java.awt.Color(37, 157, 218));
        mbSair.setHoverStartColor(new java.awt.Color(37, 157, 218));
        mbSair.setMaximumSize(new java.awt.Dimension(64, 19));
        mbSair.setMinimumSize(new java.awt.Dimension(64, 19));
        mbSair.setSelectedColor(new java.awt.Color(37, 157, 218));
        mbSair.setStartColor(new java.awt.Color(73, 136, 137));
        mbSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbSairActionPerformed(evt);
            }
        });
        mbSair.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mbSairKeyPressed(evt);
            }
        });

        cbDisponivel.setText("Disponível");

        tbAssento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Disponível"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbAssento.getTableHeader().setReorderingAllowed(false);
        jScrollPane10.setViewportView(tbAssento);

        mbHabilitar.setBackground(new java.awt.Color(73, 136, 137));
        mbHabilitar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mbHabilitar.setText("HABILITAR / DESABILITAR");
        mbHabilitar.setEndColor(new java.awt.Color(73, 136, 137));
        mbHabilitar.setHoverEndColor(new java.awt.Color(37, 157, 218));
        mbHabilitar.setHoverStartColor(new java.awt.Color(37, 157, 218));
        mbHabilitar.setMaximumSize(new java.awt.Dimension(64, 19));
        mbHabilitar.setMinimumSize(new java.awt.Dimension(64, 19));
        mbHabilitar.setSelectedColor(new java.awt.Color(37, 157, 218));
        mbHabilitar.setStartColor(new java.awt.Color(73, 136, 137));
        mbHabilitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbHabilitarActionPerformed(evt);
            }
        });
        mbHabilitar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mbHabilitarKeyPressed(evt);
            }
        });

        mbRemover.setBackground(new java.awt.Color(73, 136, 137));
        mbRemover.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        mbRemover.setText("REMOVER");
        mbRemover.setEndColor(new java.awt.Color(73, 136, 137));
        mbRemover.setHoverEndColor(new java.awt.Color(37, 157, 218));
        mbRemover.setHoverStartColor(new java.awt.Color(37, 157, 218));
        mbRemover.setMaximumSize(new java.awt.Dimension(64, 19));
        mbRemover.setMinimumSize(new java.awt.Dimension(64, 19));
        mbRemover.setSelectedColor(new java.awt.Color(37, 157, 218));
        mbRemover.setStartColor(new java.awt.Color(73, 136, 137));
        mbRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mbRemoverActionPerformed(evt);
            }
        });
        mbRemover.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mbRemoverKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(mbHabilitar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mbRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(mbAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mbSair, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tfLetra, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cbDisponivel))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfLetra, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbDisponivel)
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(mbHabilitar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(mbRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(mbAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mbSair, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private void atualizaTabelaAssento(){
        String disponivel;
        DefaultTableModel model = (DefaultTableModel)tbAssento.getModel();
        model.setRowCount(0);
        for(Assento a : listaAssento){
            if(a.isDisponivel())
                disponivel = "Sim";
            else
                disponivel = "Não";
            model.addRow(new Object[]{
                a.getCodigo(),
                disponivel
            });
        }
    }
    private void mbAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbAdicionarActionPerformed
        try{
            Integer codigoNumerico = Integer.parseInt(tfCodigo.getText().trim());
            if(!(codigoNumerico > 0 && codigoNumerico < 100))
                JOptionPane.showMessageDialog(null, "Código deve ser entre 01 e 99");
            else{
                char letra = tfLetra.getText().trim().toUpperCase().charAt(0);
                if((int) letra >= 65 && (int) letra <= 90){
                    String codigo;
                    if(codigoNumerico < 10)
                        codigo = letra + "0" + Integer.toString(codigoNumerico);
                    else
                        codigo = letra + Integer.toString(codigoNumerico);
                    boolean marcado = cbDisponivel.isSelected();
                    Assento assento = new Assento(codigo, sala, marcado);
                    if(!listaAssento.contains(assento))
                        listaAssento.add(assento);
                    else
                        JOptionPane.showMessageDialog(null, "Assento já existente");
                }else{
                    JOptionPane.showMessageDialog(null, "Somente letras no campo");
                }
            }
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Insira apenas números no codigo do assento");
        }
        atualizaTabelaAssento();
    }//GEN-LAST:event_mbAdicionarActionPerformed

    private void mbAdicionarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mbAdicionarKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_mbAdicionarKeyPressed

    private void mbSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbSairActionPerformed
        dispose();
    }//GEN-LAST:event_mbSairActionPerformed

    private void mbSairKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mbSairKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_mbSairKeyPressed

    private void mbHabilitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbHabilitarActionPerformed
        int row = tbAssento.getSelectedRow();
        if(row > -1){
            String codigo = (String) tbAssento.getValueAt(row, 0);
            Assento assento = new Assento();
            assento.setCodigo(codigo);
            assento.setSala(sala);
            try{
                int index = this.listaAssento.indexOf(assento);
                Assento encontrado = this.listaAssento.get(index);
                encontrado.setDisponivel(
                        !encontrado.isDisponivel());
                atualizaTabelaAssento();
            }catch(RollbackException ex){
                JOptionPane.showMessageDialog(null, "Não foi possível atualizar");
            }
        }else{
            JOptionPane.showMessageDialog(null, "Selecione um assento!");
        }
    }//GEN-LAST:event_mbHabilitarActionPerformed

    private void mbHabilitarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mbHabilitarKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_mbHabilitarKeyPressed

    private void mbRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mbRemoverActionPerformed
        int row = tbAssento.getSelectedRow();
        if(row > -1){
            String codigo = (String) tbAssento.getValueAt(row, 0);
            Assento assento = new Assento();
            assento.setCodigo(codigo);
            assento.setSala(sala);
            try{
                this.listaAssento.remove(assento);
                atualizaTabelaAssento();
            }catch(RollbackException ex){
                JOptionPane.showMessageDialog(null, "Não foi possível remover\n"
                        + "O assento pode estar associado à uma sala ou ingresso");
            }
        }else{
            JOptionPane.showMessageDialog(null, "Selecione um assento!");
        }
    }//GEN-LAST:event_mbRemoverActionPerformed

    private void mbRemoverKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mbRemoverKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_mbRemoverKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbDisponivel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane10;
    private com.hq.swingmaterialdesign.materialdesign.MToggleButton mbAdicionar;
    private com.hq.swingmaterialdesign.materialdesign.MToggleButton mbHabilitar;
    private com.hq.swingmaterialdesign.materialdesign.MToggleButton mbRemover;
    private com.hq.swingmaterialdesign.materialdesign.MToggleButton mbSair;
    private javax.swing.JTable tbAssento;
    private com.hq.swingmaterialdesign.materialdesign.MTextField tfCodigo;
    private com.hq.swingmaterialdesign.materialdesign.MTextField tfLetra;
    // End of variables declaration//GEN-END:variables
}
